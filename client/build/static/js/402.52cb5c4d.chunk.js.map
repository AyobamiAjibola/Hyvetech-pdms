{"version":3,"file":"static/js/402.52cb5c4d.chunk.js","mappings":"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","sources":["components/transitions/TransitionLeft.tsx","components/alerts/AppAlert.tsx","components/forms/fields/ErrorField.tsx","components/forms/fields/TextInputField.tsx","components/forms/models/signInModel.ts","hoc/withErrorBoundary.tsx","hooks/useAppDispatch.ts","../node_modules/@mui/material/Link/linkClasses.js","../node_modules/@mui/material/Link/getTextDecoration.js","../node_modules/@mui/material/Link/Link.js","../node_modules/@mui/icons-material/esm/VerifiedUser.js","../node_modules/@mui/icons-material/esm/VisibilityOff.js","components/forms/authentication/SignInForm.tsx","pages/authentication/SignInPage.tsx","hooks/useLogin.ts","../node_modules/@mui/icons-material/esm/Visibility.js","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { TransitionProps } from '@mui/material/transitions';\nimport { Slide } from '@mui/material';\n\nconst TransitionLeft = forwardRef(function Transition(\n  props: TransitionProps & {\n    children: React.ReactElement<any, any>;\n  },\n  ref: React.Ref<unknown>,\n) {\n  return <Slide direction=\"left\" ref={ref} {...props} />;\n});\n\nexport default TransitionLeft;\n","import React from 'react';\nimport { Alert, Snackbar } from '@mui/material';\nimport { CallableFunction } from '@app-types';\nimport TransitionLeft from '../transitions/TransitionLeft';\n\nexport default function AppAlert(props: AppAlertProps) {\n  const { duration = 3000 } = props;\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={props.show}\n      autoHideDuration={duration}\n      onClose={props.onClose}\n      TransitionComponent={TransitionLeft}\n      key={props.message}>\n      <Alert onClose={props.onClose} variant=\"filled\" severity={props.alertType} sx={{ width: '100%' }}>\n        {props.message}\n      </Alert>\n    </Snackbar>\n  );\n}\n\ninterface AppAlertProps {\n  alertType: 'success' | 'info' | 'warning' | 'error';\n  show: boolean;\n  message: any;\n  onClose: CallableFunction;\n  duration?: number;\n}\n","import React from 'react';\nimport { FormHelperText } from '@mui/material';\n\ninterface IErrorField {\n  helperStyle?: { [p: string]: string };\n  message: string;\n  hasError: boolean;\n}\n\nfunction ErrorField(props: IErrorField) {\n  return !props.hasError ? null : (\n    <FormHelperText sx={{ ...style, ...props.helperStyle }}>{props.message}</FormHelperText>\n  );\n}\n\nconst style = {\n  color: 'red',\n};\n\nexport default ErrorField;\n","import React, { ChangeEvent, FocusEvent } from 'react';\nimport { FormGroup, TextField } from '@mui/material';\nimport { useFormikContext } from 'formik';\nimport ErrorField from './ErrorField';\n\ninterface ITextInputFieldProps {\n  inputGroupStyle?: { [p: string]: string };\n  textInputStyle?: { [p: string]: string };\n  helperStyle?: { [p: string]: string };\n  fullWidth?: boolean;\n  size?: 'small' | 'medium';\n  onChange: (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void;\n  onBlur?: (event: FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => void;\n  value: string | number | boolean;\n  name: string;\n  label: string;\n\n  [p: string]: any;\n}\n\nfunction TextInputField(props: ITextInputFieldProps) {\n  const { errors, touched } = useFormikContext();\n\n  return (\n    <FormGroup sx={props.inputGroupStyle}>\n      <TextField\n        size={props.size}\n        onBlur={props.onBlur}\n        sx={props.textInputStyle}\n        fullWidth={props.fullWidth}\n        // @ts-ignore\n        error={errors[props.name] && touched[props.name]}\n        {...props}\n      />\n      <ErrorField\n        helperStyle={props.helperStyle}\n        // @ts-ignore\n        message={errors[props.name]}\n        // @ts-ignore\n        hasError={errors[props.name] && touched[props.name]}\n      />\n    </FormGroup>\n  );\n}\n\nexport default TextInputField;\n","import * as Yup from 'yup';\nimport { PASSWORD_PATTERN } from '../../../config/constants';\n\nconst fields = {\n  username: {\n    name: 'username',\n    label: 'Username*',\n    error: {\n      invalid: 'Invalid username.',\n      required: 'Username is required',\n    },\n  },\n  password: {\n    name: 'password',\n    label: 'Password*',\n    error: {\n      invalid: `Password must contain 8 to 20 characters,\n         and at least One, uppercase letter, lowercase letter, \n         special case character e.g @!&, and number`,\n      required: 'Password is required',\n    },\n  },\n};\n\nconst initialValues = {\n  username: '',\n  password: '',\n};\n\nconst schema = Yup.object().shape({\n  username: Yup.string().required(fields.username.error.required).label(fields.username.label),\n  password: Yup.string()\n    .required(fields.password.error.required)\n    .matches(new RegExp(PASSWORD_PATTERN), fields.password.error.invalid)\n    .label(fields.password.label),\n});\n\nconst signInModel = {\n  fields,\n  initialValues,\n  schema,\n};\n\nexport default signInModel;\n","import React, { ErrorInfo, ReactNode } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { IComponentErrorState } from '@app-interfaces';\n\ninterface Props {\n  children?: ReactNode;\n}\n\nexport default function withErrorBoundary(Component: () => JSX.Element) {\n  return class WithErrorBoundary extends React.Component<Props, IComponentErrorState> {\n    public state: IComponentErrorState = {\n      hasError: false,\n      errorMessage: '',\n    };\n\n    public static getDerivedStateFromError(error: Error): IComponentErrorState {\n      // Update state so the next render will show the fallback UI.\n      return { hasError: true, errorMessage: error.message };\n    }\n\n    public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n      console.error('Uncaught error:', error, errorInfo.componentStack);\n      this.setState({ hasError: true, errorMessage: error.message });\n    }\n\n    public render() {\n      if (this.state.hasError) {\n        return <Navigate to=\"/error\" state={{ ...this.state }} />;\n      } else return <Component />;\n    }\n  };\n}\n","import { useDispatch } from 'react-redux';\nimport { AppDispatch } from '../store';\n\nconst useAppDispatch: () => AppDispatch = useDispatch;\n\nexport default useAppDispatch;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import { alpha, getPath } from '@mui/system';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n\n  return alpha(color, 0.4);\n};\n\nexport default getTextDecoration;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\n\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    component = 'a',\n    onBlur,\n    onFocus,\n    TypographyClasses,\n    underline = 'always',\n    variant = 'inherit',\n    sx\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  const handleFocus = event => {\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 1 3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4zm-2 16-4-4 1.41-1.41L10 14.17l6.59-6.59L18 9l-8 8z\"\n}), 'VerifiedUser');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');","import React, { useState } from 'react';\nimport { Form, useFormikContext } from 'formik';\nimport { Grid, InputAdornment, Link } from '@mui/material';\nimport TextInputField from '../fields/TextInputField';\nimport { VerifiedUser, Visibility, VisibilityOff } from '@mui/icons-material';\n\nimport { ISignInModel } from '@app-interfaces';\nimport signInModel from '../models/signInModel';\nimport { LoadingButton } from '@mui/lab';\nimport useAppSelector from '../../../hooks/useAppSelector';\nimport './signInForms.css';\n\nfunction SignInForm() {\n  const [showPassword, setShowPassword] = useState<boolean>(false);\n  const [fieldType, setFieldType] = useState<string>('password');\n\n  const { handleChange, handleBlur, values } = useFormikContext<ISignInModel>();\n\n  const authReducer = useAppSelector(state => state.authenticationReducer);\n\n  const togglePasswordVisibility = () => {\n    setFieldType(fieldType === 'text' ? 'password' : 'text');\n    setShowPassword(!showPassword);\n  };\n\n  return (\n    <Form autoComplete=\"off\" className=\"formContainer\">\n      <Grid container direction=\"column\">\n        <Grid item xs={12} md={6}>\n          <TextInputField\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.username}\n            label={signInModel.fields.username.label}\n            name={signInModel.fields.username.name}\n            margin=\"normal\"\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <VerifiedUser />\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextInputField\n            onChange={handleChange}\n            onBlur={handleBlur}\n            value={values.password}\n            label={signInModel.fields.password.label}\n            name={signInModel.fields.password.name}\n            type={fieldType}\n            margin=\"normal\"\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <Visibility />\n                </InputAdornment>\n              ),\n              endAdornment: (\n                <InputAdornment onClick={togglePasswordVisibility} position=\"start\" sx={{ cursor: 'pointer' }}>\n                  {showPassword ? <VisibilityOff /> : <Visibility />}\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Grid>\n        <Grid item container my={2} justifyContent=\"space-between\" alignItems=\"center\" xs>\n          <Grid item />\n          <Grid item>\n            <Link>Forgot my password</Link>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={6} sx={{ mt: 2 }}>\n          <LoadingButton\n            loading={authReducer.signingInStatus === 'loading'}\n            type=\"submit\"\n            size=\"large\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\">\n            Login\n          </LoadingButton>\n        </Grid>\n      </Grid>\n    </Form>\n  );\n}\n\nexport default SignInForm;\n","import './signInForm.css';\n\nimport { ISignInModel } from '@app-interfaces';\nimport { Typography } from '@mui/material';\nimport { Formik, FormikHelpers } from 'formik';\nimport React from 'react';\n\nimport logoLogin from '../../assets/images/logoLogin.png';\nimport AppAlert from '../../components/alerts/AppAlert';\nimport SignInForm from '../../components/forms/authentication/SignInForm';\nimport signInModel from '../../components/forms/models/signInModel';\nimport PublicLayout from '../../components/layouts/PublicLayout';\nimport withErrorBoundary from '../../hoc/withErrorBoundary';\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport useLogin from '../../hooks/useLogin';\nimport { signInAction } from '../../store/actions/authenicationActions';\n\nfunction SignInPage() {\n  const dispatch = useAppDispatch();\n\n  const login = useLogin();\n\n  const handleSignIn = (values: ISignInModel, formikHelpers: FormikHelpers<ISignInModel>) => {\n    dispatch(signInAction(values));\n    formikHelpers.resetForm();\n  };\n\n  return (\n    <PublicLayout>\n      <img src={logoLogin} alt=\"\" className=\"loginLogo\" />\n      <Typography textAlign=\"center\" sx={headTextStyle}>\n        Welcome to your gateway to boundless opportunities!\n      </Typography>\n      <Formik initialValues={signInModel.initialValues} validationSchema={signInModel.schema} onSubmit={handleSignIn}>\n        <SignInForm />\n      </Formik>\n      <AppAlert\n        alertType=\"success\"\n        show={login.success !== undefined}\n        message={login.success?.message}\n        onClose={login.clearSuccess}\n      />\n      <AppAlert\n        alertType=\"error\"\n        show={login.error !== undefined}\n        message={login.error?.message}\n        onClose={login.clearError}\n      />\n    </PublicLayout>\n  );\n}\n\nconst headTextStyle = {\n  fontFamily: 'Poppins',\n  fontStyle: 'normal',\n  fontWeight: '400',\n  fontSize: '14px',\n  mb: '20px',\n};\n\nexport default withErrorBoundary(SignInPage);\n","import { CustomHookMessage } from '@app-types';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { clearLoginStatus } from '../store/reducers/authenticationReducer';\nimport useAppDispatch from './useAppDispatch';\nimport useAppSelector from './useAppSelector';\nimport settings from '../config/settings';\n\nexport default function useLogin() {\n  const [_timeout, _setTimeout] = useState<any>();\n  const [success, setSuccess] = useState<CustomHookMessage>();\n  const [error, setError] = useState<CustomHookMessage>();\n\n  const navigate = useNavigate();\n\n  const authReducer = useAppSelector(state => state.authenticationReducer);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    const isLoggedIn = sessionStorage.getItem(settings.auth.admin);\n\n    if (!isLoggedIn) {\n      navigate('/');\n    } else navigate('/dashboard');\n  }, [navigate]);\n\n  useEffect(() => {\n    if (authReducer.signingInStatus === 'completed') {\n      setSuccess({ message: authReducer.signingInSuccess });\n\n      //cookie.set(settings.auth.admin, authReducer.authToken);\n\n      _setTimeout(\n        setTimeout(() => {\n          navigate('/dashboard');\n        }, 1000),\n      );\n    }\n  }, [authReducer.authToken, authReducer.signingInStatus, authReducer.signingInSuccess, dispatch, navigate]);\n\n  useEffect(() => {\n    if (authReducer.signingInStatus === 'failed') {\n      if (authReducer.signingInError) {\n        setError({ message: authReducer.signingInError });\n      }\n      dispatch(clearLoginStatus());\n    }\n  }, [authReducer.signingInStatus, authReducer.signingInError, navigate, dispatch]);\n\n  useEffect(() => {\n    return () => {\n      clearTimeout(_timeout);\n    };\n  }, [_timeout]);\n\n  const clearError = () => setError(undefined);\n  const clearSuccess = () => setSuccess(undefined);\n\n  useEffect(() => {\n    return () => {\n      dispatch(clearLoginStatus());\n    };\n  }, [dispatch]);\n\n  return {\n    success,\n    error,\n    clearError,\n    clearSuccess,\n  };\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _span;\n\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\n\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ?\n        /* notranslate needed while Google Translate will not fix zero-width space issue */\n        _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        })) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;"],"names":["forwardRef","props","ref","Slide","direction","AppAlert","duration","Snackbar","anchorOrigin","vertical","horizontal","open","show","autoHideDuration","onClose","TransitionComponent","TransitionLeft","Alert","variant","severity","alertType","sx","width","message","style","color","hasError","helperStyle","useFormikContext","errors","touched","inputGroupStyle","size","onBlur","textInputStyle","fullWidth","error","name","fields","username","label","invalid","required","password","signInModel","initialValues","schema","Yup","shape","matches","RegExp","PASSWORD_PATTERN","withErrorBoundary","Component","state","errorMessage","errorInfo","console","componentStack","this","setState","to","React","useAppDispatch","useDispatch","getLinkUtilityClass","slot","generateUtilityClass","generateUtilityClasses","colorTransformations","primary","textPrimary","secondary","textSecondary","theme","ownerState","transformedColor","transformDeprecatedColors","getPath","channelColor","alpha","_excluded","LinkRoot","styled","Typography","overridesResolver","styles","root","capitalize","underline","component","button","_extends","textDecoration","textDecorationColor","getTextDecoration","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","inProps","useThemeProps","className","onFocus","TypographyClasses","other","_objectWithoutPropertiesLoose","useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","focusVisible","setFocusVisible","handlerRef","useForkRef","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","event","current","Object","keys","includes","Array","isArray","createSvgIcon","d","useState","showPassword","setShowPassword","fieldType","setFieldType","handleChange","handleBlur","values","authReducer","useAppSelector","authenticationReducer","autoComplete","Grid","container","item","xs","md","TextInputField","onChange","value","InputProps","startAdornment","InputAdornment","VerifiedUser","type","Visibility","endAdornment","onClick","VisibilityOff","my","justifyContent","alignItems","mt","LoadingButton","loading","signingInStatus","headTextStyle","fontFamily","fontStyle","fontWeight","fontSize","mb","dispatch","login","_timeout","_setTimeout","success","setSuccess","setError","navigate","useNavigate","useEffect","isLoggedIn","sessionStorage","getItem","settings","signingInSuccess","setTimeout","authToken","signingInError","clearLoginStatus","clearTimeout","clearError","undefined","clearSuccess","useLogin","PublicLayout","src","logoLogin","alt","textAlign","validationSchema","onSubmit","formikHelpers","signInAction","resetForm","getInputAdornmentUtilityClass","_span","InputAdornmentRoot","disablePointerEvents","display","height","maxHeight","whiteSpace","vars","palette","action","active","inputAdornmentClasses","marginTop","marginRight","marginLeft","pointerEvents","children","disableTypography","variantProp","muiFormControl","useFormControl","hiddenLabel","FormControlContext","as","_jsxs"],"sourceRoot":""}