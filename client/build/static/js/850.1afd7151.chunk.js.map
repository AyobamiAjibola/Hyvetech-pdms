{"version":3,"file":"static/js/850.1afd7151.chunk.js","mappings":"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","sources":["components/transitions/TransitionLeft.tsx","components/alerts/AppAlert.tsx","components/forms/fields/ErrorField.tsx","components/forms/fields/TextInputField.tsx","components/forms/models/signInModel.ts","hooks/useAppDispatch.ts","components/forms/authentication/GarageSignInForm.tsx","utils/cookie.ts","pages/authentication/GarageSignInPage.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { TransitionProps } from '@mui/material/transitions';\nimport { Slide } from '@mui/material';\n\nconst TransitionLeft = forwardRef(function Transition(\n  props: TransitionProps & {\n    children: React.ReactElement<any, any>;\n  },\n  ref: React.Ref<unknown>,\n) {\n  return <Slide direction=\"left\" ref={ref} {...props} />;\n});\n\nexport default TransitionLeft;\n","import React from 'react';\nimport { Alert, Snackbar } from '@mui/material';\nimport { CallableFunction } from '@app-types';\nimport TransitionLeft from '../transitions/TransitionLeft';\n\nexport default function AppAlert(props: AppAlertProps) {\n  const { duration = 3000 } = props;\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={props.show}\n      autoHideDuration={duration}\n      onClose={props.onClose}\n      TransitionComponent={TransitionLeft}\n      key={props.message}>\n      <Alert onClose={props.onClose} variant=\"filled\" severity={props.alertType} sx={{ width: '100%' }}>\n        {props.message}\n      </Alert>\n    </Snackbar>\n  );\n}\n\ninterface AppAlertProps {\n  alertType: 'success' | 'info' | 'warning' | 'error';\n  show: boolean;\n  message: any;\n  onClose: CallableFunction;\n  duration?: number;\n}\n","import React from 'react';\nimport { FormHelperText } from '@mui/material';\n\ninterface IErrorField {\n  helperStyle?: { [p: string]: string };\n  message: string;\n  hasError: boolean;\n}\n\nfunction ErrorField(props: IErrorField) {\n  return !props.hasError ? null : (\n    <FormHelperText sx={{ ...style, ...props.helperStyle }}>{props.message}</FormHelperText>\n  );\n}\n\nconst style = {\n  color: 'red',\n};\n\nexport default ErrorField;\n","import React, { ChangeEvent, FocusEvent } from 'react';\nimport { FormGroup, TextField } from '@mui/material';\nimport { useFormikContext } from 'formik';\nimport ErrorField from './ErrorField';\n\ninterface ITextInputFieldProps {\n  inputGroupStyle?: { [p: string]: string };\n  textInputStyle?: { [p: string]: string };\n  helperStyle?: { [p: string]: string };\n  fullWidth?: boolean;\n  size?: 'small' | 'medium';\n  onChange: (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void;\n  onBlur?: (event: FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => void;\n  value: string | number | boolean;\n  name: string;\n  label: string;\n  placeholder?: string;\n\n  [p: string]: any;\n}\n\nfunction TextInputField(props: ITextInputFieldProps) {\n  const { errors, touched } = useFormikContext();\n\n  return (\n    <FormGroup sx={props.inputGroupStyle}>\n      <TextField\n        size={props.size}\n        placeholder={props?.placeholder || undefined}\n        onBlur={props.onBlur}\n        sx={props.textInputStyle}\n        fullWidth={props.fullWidth}\n        // @ts-ignore\n        error={errors[props.name] && touched[props.name]}\n        {...props}\n      />\n      <ErrorField\n        helperStyle={props.helperStyle}\n        // @ts-ignore\n        message={errors[props.name]}\n        // @ts-ignore\n        hasError={errors[props.name] && touched[props.name]}\n      />\n    </FormGroup>\n  );\n}\n\nexport default TextInputField;\n","import * as Yup from 'yup';\nimport { PASSWORD_PATTERN } from '../../../config/constants';\n\nconst fields = {\n  username: {\n    name: 'username',\n    label: 'Username*',\n    error: {\n      invalid: 'Invalid username.',\n      required: 'Username is required',\n    },\n  },\n  password: {\n    name: 'password',\n    label: 'Password*',\n    error: {\n      invalid: `Password must contain 8 to 20 characters,\n         and at least One, uppercase letter, lowercase letter, \n         special case character e.g @!&, and number`,\n      required: 'Password is required',\n    },\n  },\n};\n\nconst initialValues = {\n  username: '',\n  password: '',\n};\n\nconst schema = Yup.object().shape({\n  username: Yup.string().required(fields.username.error.required).label(fields.username.label),\n  password: Yup.string()\n    .required(fields.password.error.required)\n    .matches(new RegExp(PASSWORD_PATTERN), fields.password.error.invalid)\n    .label(fields.password.label),\n});\n\nconst signInModel = {\n  fields,\n  initialValues,\n  schema,\n};\n\nexport default signInModel;\n","import { useDispatch } from 'react-redux';\nimport { AppDispatch } from '../store';\n\nconst useAppDispatch: () => AppDispatch = useDispatch;\n\nexport default useAppDispatch;\n","import React from 'react';\nimport { Form, useFormikContext } from 'formik';\nimport { Grid } from '@mui/material';\nimport TextInputField from '../fields/TextInputField';\nimport { LoadingButton } from '@mui/lab';\nimport { Link } from 'react-router-dom';\nimport signInModel from '../models/signInModel';\nimport { ISignInModel } from '@app-interfaces';\n\ninterface Props {\n  isSubmitting?: boolean;\n}\n\nconst { fields } = signInModel;\n\nfunction GarageSignUpForm(props: Props) {\n  const { handleChange, values } = useFormikContext<ISignInModel>();\n  return (\n    <Form autoComplete=\"off\" className=\"formContainer\">\n      <Grid container direction=\"column\">\n        <Grid item xs={12}>\n          <TextInputField\n            margin=\"normal\"\n            onChange={handleChange}\n            value={values.username}\n            name={fields.username.name}\n            label={fields.username.label}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextInputField\n            margin=\"normal\"\n            onChange={handleChange}\n            value={values.password}\n            name={fields.password.name}\n            label={fields.password.label}\n            type=\"password\"\n          />\n        </Grid>\n\n        <Grid item container xs spacing={2} my={3} justifyContent=\"space-between\" alignItems=\"center\">\n          <Grid item xs={6}>\n            <Link style={{ color: '#FBA91A' }} to=\"/garage/register\">\n              Create Account\n            </Link>\n          </Grid>\n          <Grid item>\n            <LoadingButton\n              loading={props.isSubmitting}\n              disabled={props.isSubmitting}\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"warning\"\n              size=\"large\">\n              Continue\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Form>\n  );\n}\n\nexport default GarageSignUpForm;\n","import jwt, { JwtPayload } from 'jsonwebtoken';\nimport _ from 'lodash';\n\nimport moment from 'moment';\n\nexport type CustomJWTPayload = JwtPayload & { exp: number };\n\nconst cookie = {\n  clear(cookies: string[]) {\n    if (!_.isArray(cookies)) return false;\n\n    for (let i = 0; i < cookies.length; i++) {\n      this.remove(cookies[i]);\n    }\n    return true;\n  },\n\n  exist(name: string) {\n    return this.get(name).length !== 0;\n  },\n\n  isExpired(name: string) {\n    const cookie = this.get(name);\n\n    if (!cookie.length) return true;\n\n    const decode = <CustomJWTPayload>jwt.decode(cookie);\n\n    if (!decode) throw new Error('Could not decode JWT');\n\n    const cookieExpiry = decode.exp;\n\n    const date = new Date(cookieExpiry * 1000);\n\n    const cookieDate = moment(date.toUTCString());\n\n    const now = moment();\n\n    return now.isAfter(cookieDate);\n  },\n\n  set(name: string, value: string) {\n    const decode = <CustomJWTPayload>jwt.decode(value);\n\n    if (!decode) throw new Error('Could not decode JWT');\n\n    const exp = decode.exp;\n\n    const date = new Date(exp * 1000);\n\n    document.cookie = `${name}=${value};Expires=${date.toUTCString()};Path=/;SameSite=strict;`;\n  },\n\n  get(name: string) {\n    name = name + '=';\n\n    const ca = document.cookie.split(';');\n\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) === ' ') {\n        c = c.substring(1);\n      }\n\n      if (c.indexOf(name) === 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n\n    return '';\n  },\n\n  remove(name: string) {\n    return (document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`);\n  },\n};\n\nexport default cookie;\n","import React, { useEffect, useState } from 'react';\nimport PublicLayout from '../../components/layouts/PublicLayout';\nimport logoLogin from '../../assets/images/logoLogin.png';\nimport { Box, Typography } from '@mui/material';\nimport { Formik, FormikHelpers } from 'formik';\n\nimport './signInForm.css';\nimport signInModel from '../../components/forms/models/signInModel';\nimport { ISignInModel } from '@app-interfaces';\nimport GarageSignInForm from '../../components/forms/authentication/GarageSignInForm';\nimport { signInAction } from '../../store/actions/authenicationActions';\nimport useAppDispatch from '../../hooks/useAppDispatch';\nimport AppAlert from '../../components/alerts/AppAlert';\nimport useAppSelector from '../../hooks/useAppSelector';\nimport AppLoader from '../../components/loader/AppLoader';\nimport { CustomHookMessage } from '@app-types';\nimport { useNavigate } from 'react-router-dom';\nimport cookie from '../../utils/cookie';\nimport settings from '../../config/settings';\n\nconst { schema, initialValues } = signInModel;\n\nfunction GarageSignInPage() {\n  const [timer, setTimer] = useState<NodeJS.Timer>();\n  const [success, setSuccess] = useState<CustomHookMessage>();\n  const [error, setError] = useState<CustomHookMessage>();\n\n  const navigate = useNavigate();\n\n  const authReducer = useAppSelector(state => state.authenticationReducer);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    const isLoggedIn = cookie.get(settings.auth.admin);\n\n    if (!isLoggedIn) {\n      navigate('/garage/login');\n    } else navigate('/dashboard');\n  }, [navigate]);\n\n  useEffect(() => {\n    if (authReducer.signingInStatus === 'completed') {\n      setSuccess({ message: authReducer.signingInSuccess });\n\n      setTimer(\n        setTimeout(() => {\n          navigate('/dashboard');\n        }, 1000),\n      );\n    }\n  }, [authReducer.authToken, authReducer.signingInStatus, authReducer.signingInSuccess, dispatch, navigate]);\n\n  useEffect(() => {\n    if (authReducer.signingInStatus === 'failed') {\n      if (authReducer.signingInError) {\n        setError({ message: authReducer.signingInError });\n      }\n    }\n  }, [authReducer.signingInStatus, authReducer.signingInError, navigate]);\n\n  useEffect(() => {\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [timer]);\n\n  const handleSubmit = (values: ISignInModel, helpers: FormikHelpers<ISignInModel>) => {\n    dispatch(signInAction(values));\n    helpers.resetForm();\n  };\n  return (\n    <PublicLayout>\n      <img src={logoLogin} alt=\"\" className=\"loginLogo\" />\n      <Box sx={{ mb: 3 }}>\n        <Typography textAlign=\"center\" sx={headTextStyle}>\n          Sign In\n        </Typography>\n        <Typography textAlign=\"center\" variant=\"subtitle2\">\n          To continue to your AutoHyve Workshop Profile\n        </Typography>\n      </Box>\n      <Formik initialValues={initialValues} validationSchema={schema} onSubmit={handleSubmit}>\n        <GarageSignInForm />\n      </Formik>\n      <AppAlert\n        alertType=\"success\"\n        show={success !== undefined}\n        message={success?.message}\n        onClose={() => setSuccess(undefined)}\n      />\n      <AppAlert\n        alertType=\"error\"\n        show={error !== undefined}\n        message={error?.message}\n        onClose={() => setError(undefined)}\n      />\n      <AppLoader show={authReducer.signingInStatus === 'loading'} />\n    </PublicLayout>\n  );\n}\n\nconst headTextStyle = {\n  fontFamily: 'Poppins',\n  fontStyle: 'normal',\n  fontWeight: '400',\n  fontSize: '20px',\n  mb: '10px',\n};\n\nexport default GarageSignInPage;\n"],"names":["forwardRef","props","ref","Slide","direction","AppAlert","duration","Snackbar","anchorOrigin","vertical","horizontal","open","show","autoHideDuration","onClose","TransitionComponent","TransitionLeft","Alert","variant","severity","alertType","sx","width","message","style","color","hasError","helperStyle","useFormikContext","errors","touched","inputGroupStyle","size","placeholder","undefined","onBlur","textInputStyle","fullWidth","error","name","fields","username","label","invalid","required","password","signInModel","initialValues","schema","Yup","shape","matches","RegExp","PASSWORD_PATTERN","useAppDispatch","useDispatch","handleChange","values","autoComplete","className","Grid","container","item","xs","TextInputField","margin","onChange","value","type","spacing","my","justifyContent","alignItems","to","LoadingButton","loading","isSubmitting","disabled","clear","cookies","_","i","length","this","remove","exist","get","isExpired","cookie","decode","jwt","Error","cookieExpiry","exp","date","Date","cookieDate","moment","toUTCString","isAfter","set","document","ca","split","c","charAt","substring","indexOf","headTextStyle","fontFamily","fontStyle","fontWeight","fontSize","mb","useState","timer","setTimer","success","setSuccess","setError","navigate","useNavigate","authReducer","useAppSelector","state","authenticationReducer","dispatch","useEffect","isLoggedIn","settings","signingInStatus","signingInSuccess","setTimeout","authToken","signingInError","clearTimeout","PublicLayout","src","logoLogin","alt","Box","Typography","textAlign","validationSchema","onSubmit","helpers","signInAction","resetForm","GarageSignInForm","AppLoader"],"sourceRoot":""}